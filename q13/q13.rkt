#lang racket
(require racket/draw)

(define (string->numlist input)
  (define (str_nl_inner input)
    (if (null? input)
        '()
        (cons (string->number (car input)) (str_nl_inner (cdr input)))))
  (str_nl_inner (string-split input ",")))

(define (strings->numlists input)
  (if (null? input)
      '()
      (cons (string->numlist (car input)) (strings->numlists (cdr input)))))

(define (get_image input fname)
  (define bmp1 (make-bitmap 1500 1500))
  (define dc (new bitmap-dc% [bitmap bmp1]))
  (send dc set-brush "white" 'solid)
  (send dc set-pen "white" 1 'solid)
  (define (draw_inner inputs)
    (when (not (null? inputs))
      (send dc draw-rectangle (caar inputs) (cadar inputs) 1 1)
      (draw_inner (cdr inputs))))
  (draw_inner input)
  (send bmp1 save-file fname 'png))

(define (rip_out_coords input)
  (define (rip_out_inner input)
    (if (null? input)
        '()
        (cons (caar input) (rip_out_inner (cdr input)))))
  (remove-duplicates (rip_out_inner input)))

(define (fold_about_x input fold_x)
  (define ht (make-hash))
  (define (fold_x_inner input fold_x)
    (when (not (null? input))
      (define temp '())
      (if (>= (caar input) fold_x)
          (set! temp (list (- fold_x (- (caar input) fold_x)) (cadar input)))
          (set! temp (list (caar input) (cadar input))))
      (when (not (hash-ref ht temp #f))
        (hash-set! ht temp #t))
      (fold_x_inner (cdr input) fold_x)))
  (fold_x_inner input fold_x)
  (rip_out_coords (hash->list ht)))

(define (fold_about_y input fold_y)
  (define ht (make-hash))
  (define (fold_y_inner input fold_y)
    (define temp '())
    (when (not (null? input))
      (if (>= (cadar input) fold_y)
          (set! temp (list (caar input) (- fold_y (- (cadar input) fold_y))))
          (set! temp (list (caar input) (cadar input))))
      (when (not (hash-ref ht temp #f))
        (hash-set! ht temp #t))
      (fold_y_inner (cdr input) fold_y)))
  (fold_y_inner input fold_y)
  (rip_out_coords (hash->list ht)))
  



(define input (strings->numlists (file->lines "input.txt")))
#|(set! input (fold_about_y input 7))
(display input)
(get_image input "test1.png")
(set! input (fold_about_x input 5))
(get_image input "test2.png")|#
(get_image input "output1.png")
(set! input (fold_about_x input 655))
(get_image input "output2.png")
(set! input (fold_about_y input 447))
(get_image input "output3.png")
(set! input (fold_about_x input 327))
(get_image input "output4.png")
(set! input (fold_about_y input 223))
(get_image input "output5.png")
(set! input (fold_about_x input 163))
(get_image input "output6.png")
(set! input (fold_about_y input 111))
(get_image input "output7.png")
(set! input (fold_about_x input 81))
(get_image input "output8.png")
(set! input (fold_about_y input 55))
(get_image input "output9.png")
(set! input (fold_about_x input 40))
(get_image input "output10.png")
(set! input (fold_about_y input 27))
(get_image input "output11.png")
(set! input (fold_about_y input 13))
(set! input (fold_about_y input 6))
(get_image input "output12.png")